#!/bin/bash

# Default values
EXPID=-1
WORKLOAD="llama.cpp"
BASE=()
WARMUP=10
OPTIONS=()
COMMAND=()
CLIENT=false

# For llama.cpp
INFERENCE="Building a website can be done in 10 simple steps:"
TOKENS=32

# Get the arguments
while getopts "x:l:b:w:o:c:" arg; do
  case $arg in
    x) EXPID=$OPTARG;;
    l) WORKLOAD=$OPTARG;;
    b) BASE+=("$OPTARG");;
    w) WARMUP=$OPTARG;;
    o) OPTIONS+=("$OPTARG");;
    c) COMMAND+=("$OPTARG");;
    *) ;;
  esac
done

# Setup the default options and commands for the Docker run command
if [[ "$WORKLOAD" == "llama.cpp" ]]; then
  OPTIONS=(-v "${PWD}"/llama.cpp/models:/models)
  COMMAND=(-m /models/7B/ggml-model-q4_0.bin -p "${INFERENCE}" -n "${TOKENS}" --seed 12345678 -t 2)
elif [[ "$WORKLOAD" == "video-stream" ]]; then
  OPTIONS=(-p 8080:8080 --add-host=host.docker.internal:host-gateway)
elif [[ "$WORKLOAD" == "nginx-vod-module-docker" ]]; then
  OPTIONS=(-p 3030:80 -v "${PWD}"/nginx-vod-module-docker/examples/videos:/opt/static/videos -v "${PWD}"/workloads/nginx-vod-module-docker/nginx.conf:/usr/local/nginx/conf/nginx.conf)
  CLIENT=true
elif [[ "$WORKLOAD" == "flaskr" ]]; then
  OPTIONS=(-p 5000:5000)
  CLIENT=true
elif [[ "$WORKLOAD" == "cypress-realworld-app" ]]; then
  yarn --cwd "${PWD}"/cypress-realworld-app start:react &
  OPTIONS=(-p 3001:3001)
  CLIENT=true
fi


# Setup the log files
mkdir -p logs/"${WORKLOAD}-${EXPID}"
mkdir -p results/"${WORKLOAD}-${EXPID}"
mkdir -p results/"${WORKLOAD}-${EXPID}"/samples

echo -e "### experiment ${EXPID} ###\n workload: ${WORKLOAD}\n" >> logs/"${WORKLOAD}-${EXPID}"/warmup.txt
date +"# started on %c %n" >> logs/"${WORKLOAD}-${EXPID}"/warmup.txt

# Build the Docker images and run the workload once for each base image as warm-up
for i in "${BASE[@]}"; do
  echo -e "### experiment ${EXPID} ###\n# workload: ${WORKLOAD}\n# image: ${i}\n" | tee -a \
  logs/"${WORKLOAD}"-"${EXPID}"/"${i}".txt \
  results/"${WORKLOAD}"-"${EXPID}"/"${i}".txt results/"${WORKLOAD}"-"${EXPID}"/samples/"${i}".txt
  # If alpine is selected, use the alpine Dockerfile;
  if [[ "$i" == "alpine" ]]; then 
    DOCKERFILE=DockerfileAlpine; 
  # If centos is selected, use the centos Dockerfile
  elif [[ "$i" == "centos" ]]; then
    DOCKERFILE=DockerfileCentos;
  else 
    DOCKERFILE=Dockerfile; 
  fi

  # Build the Docker image
  docker build -t "${WORKLOAD}"-"${i}" -f workloads/"${WORKLOAD}"/${DOCKERFILE} --build-arg BASE="${i}" "${WORKLOAD}"

  # Run the docker run command as warmup
  if ${CLIENT} ; then
    docker run --name "${WORKLOAD}"-"${i}" "${OPTIONS[@]}" "${WORKLOAD}"-"${i}" "${COMMAND[@]}" &
    bash workloads/"${WORKLOAD}"/client -b "${i}"
  else
    docker run --name "${WORKLOAD}"-"${i}" "${OPTIONS[@]}" "${WORKLOAD}"-"${i}" "${COMMAND[@]}"
  fi

  docker rm "${WORKLOAD}"-"${i}"
done

# Log the docker images information
echo -e "# docker images\n" >> logs/"${WORKLOAD}"-"${EXPID}"/warmup.txt
docker image ls >> logs/"${WORKLOAD}"-"${EXPID}"/warmup.txt

# Start the warm up procedure
echo -e "\n# warmup\n" >> logs/"${WORKLOAD}"-"${EXPID}"/warmup.txt
sysbench cpu --time="${WARMUP}" --cpu-max-prime=100000 --threads=2 run | tee -a logs/"${WORKLOAD}"-"${EXPID}"/warmup.txt
echo -e "\n\n" >> logs/"${WORKLOAD}"-"${EXPID}"/warmup.txt


